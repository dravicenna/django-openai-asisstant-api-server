[tool.poetry]
name = "django-openai-assistant-framework"
version = "0.1.0"
description = ""
authors = ["Vitaly Bobin <vetbobin@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
Django = "^5.0.1"
python-dotenv = "^1.0.1"
openai = "^1.12.0"
requests = "^2.31.0"
celery = "^5.3.6"
dj-database-url = "^2.1.0"
redis = "^5.0.1"
pytelegrambotapi = "^4.15.4"
airtable = "^0.4.8"
psycopg2-binary = "^2.9.9"
whitenoise = {extras = ["brotli"], version = "^6.6.0"}
gunicorn = "^21.2.0"
uvicorn = "^0.27.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.2.1"


[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 119
extend-include = ["*.ipynb"]

[tool.ruff.format]
quote-style = 'single'
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
  'Q',      # single quote over double quotes
  'UP',     # Pyupgrade
  'I',      # isort
  'RUF100', # Ruff
  'C90',    # Too complex. See mccabe below
  # 'D',      # pydocstyle
]

ignore = ['D104', 'D105', 'D107', 'D205', 'D415']

[tool.ruff.lint.flake8-quotes]
inline-quotes = 'single'
multiline-quotes = 'double'

[tool.ruff.lint.isort]
known-first-party = ['api', 'assistant', 'bot', 'tests']

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/*.ipynb" = ["E402"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
include =  ['api', 'assistant', 'bot', 'tests']
reportUnnecessaryTypeIgnoreComment = true
pythonVersion = '3.11'

[tool.mypy]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
# disallow_untyped_defs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true


[tool.pytest.ini_options]
junit_family = "xunit1"

addopts = "-ras -n auto --dist loadfile"
testpaths = ["tests"]
